


ARM Macro Assembler    Page 1 


    1 00000000                 IMPORT           OSTCBCur
    2 00000000                 IMPORT           OSTCBNext
    3 00000000         
    4 00000000                 EXPORT           OS_ENTER_CRITICAL
    5 00000000                 EXPORT           OS_EXIT_CRITICAL
    6 00000000                 EXPORT           OSStart
    7 00000000                 EXPORT           PendSV_Handler
    8 00000000                 EXPORT           OSCtxSw
    9 00000000         
   10 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; Address of NVIC I
                                                            nterruptions Contro
                                                            l Register
   11 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; Enable PendSV
   12 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; System priority r
                                                            egister (priority 1
                                                            4).
   13 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSV priority v
                                                            alue (lowest).
   14 00000000         
   15 00000000                 PRESERVE8                    ; align 8
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ;/******************OS_ENTER_CRITICAL************/
   21 00000000         OS_ENTER_CRITICAL
   22 00000000 B672            CPSID            I           ; Enable interrupti
                                                            ons(Change Processo
                                                            r States: Interrupt
                                                            s Disable)
   23 00000002 4770            BX               LR          ; Return
   24 00000004         
   25 00000004         ;/******************OS_EXIT_CRITICAL************/
   26 00000004         OS_EXIT_CRITICAL
   27 00000004 B662            CPSIE            I           ; Disable interrupt
                                                            ions
   28 00000006 4770            BX               LR          ; Return
   29 00000008         
   30 00000008         ;/******************OSStart************/
   31 00000008         OSStart
   32 00000008         ; disable interruptions
   33 00000008 B672            CPSID            I           ; OS_ENTER_CRITICAL
                                                            ();
   34 0000000A         ; initialize PendSV
   35 0000000A         ; Set the PendSV exception priority
   36 0000000A 4816            LDR              R0, =NVIC_SYSPRI14 ; R0 = NVIC_
                                                            SYSPRI14;
   37 0000000C F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI ; R1 = NVI
                                                            C_PENDSV_PRI;
   38 00000010 7001            STRB             R1, [R0]    ; *R0 = R1;
   39 00000012         



ARM Macro Assembler    Page 2 


   40 00000012         ; initialize PSP as 0
   41 00000012         ; MOV R4, #0
   42 00000012 F04F 0400       LDR              R4,  =0x0   ; R4 = 0;
   43 00000016 F384 8809       MSR              PSP, R4     ; PSP = R4;
   44 0000001A         
   45 0000001A         ; trigger PendSV
   46 0000001A 4C13            LDR              R4, =NVIC_INT_CTRL ; R4 = NVIC_
                                                            INT_CTRL;
   47 0000001C F04F 5580       LDR              R5, =NVIC_PENDSVSET ; R5 = NVIC
                                                            _PENDSVSET;
   48 00000020 6025            STR              R5, [R4]    ; *R4 = R5;
   49 00000022         
   50 00000022         ; enable interruptions
   51 00000022 B662            CPSIE            I           ; OS_EXIT_CRITICAL(
                                                            );
   52 00000024         
   53 00000024         ; should never get here
   54 00000024         ; a endless loop
   55 00000024         OSStartHang
   56 00000024 E7FE            B                OSStartHang
   57 00000026         
   58 00000026         ;/******************PendSV_Handler************/
   59 00000026         PendSV_Handler
   60 00000026 B672            CPSID            I           ; OS_ENTER_CRITICAL
                                                            ();
   61 00000028         ; judge if PSP is 0 which means the task is first invoke
                       d
   62 00000028 F3EF 8009       MRS              R0, PSP     ; R0 = PSP;
   63 0000002C B130            CBZ              R0, PendSV_Handler_NoSave ; if(
                                                            R0 == 0) goto PendS
                                                            V_Handler_NoSave;
   64 0000002E         
   65 0000002E         ; store R4-R11 to *R0
   66 0000002E F1A0 0020       SUB              R0, R0, #0x20
   67 00000032 E880 0FF0       STM              R0, {R4-R11}
   68 00000036         
   69 00000036 490D            LDR              R1, =OSTCBCur ; R1 = OSTCBCur;
   70 00000038 6809            LDR              R1, [R1]    ; R1 = *R1;(R1 = OS
                                                            TCBCur->OSTCBStkPtr
                                                            )
   71 0000003A 6008            STR              R0, [R1]    ; *R1 = R0;(*(OSTCB
                                                            Cur->OSTCBStkPrt) =
                                                             R0)
   72 0000003C         
   73 0000003C         PendSV_Handler_NoSave
   74 0000003C 480B            LDR              R0, =OSTCBCur ; R0 = OSTCBCur;
   75 0000003E 490C            LDR              R1, =OSTCBNext 
                                                            ; R1 = OSTCBNext;
   76 00000040 680A            LDR              R2, [R1]    ; R2 = OSTCBNext->O
                                                            STCBStkPtr;
   77 00000042 6002            STR              R2, [R0]    ; *R0 = R2;(OSTCBCu
                                                            r->OSTCBStkPtr = OS
                                                            TCBNext->OSTCBStkPt
                                                            r)
   78 00000044         
   79 00000044 6810            LDR              R0, [R2]    ; R0 = *R2;(R0 = OS
                                                            TCBNext->OSTCBStkPt
                                                            r)
   80 00000046         



ARM Macro Assembler    Page 3 


   81 00000046         ; restore *R0 to R4-R11 
   82 00000046 E8B0 0FF0       LDM              R0!, {R4-R11}
   83 0000004A         
   84 0000004A F380 8809       MSR              PSP, R0     ; PSP = R0;(PSP = O
                                                            STCBNext->OSTCBStkP
                                                            tr)
   85 0000004E F04E 0E04       ORR              LR, LR, #0x04 ; LR = LR | 0x04;
                                                             use PSP
   86 00000052 B662            CPSIE            I           ; OS_EXIT_CRITICAL(
                                                            );
   87 00000054 4770            BX               LR          ; return;
   88 00000056         
   89 00000056         OSCtxSw                              ;OS context switch
   90 00000056 B430            PUSH             {R4, R5}
   91 00000058 4C03            LDR              R4, =NVIC_INT_CTRL ; R4 = NVIC_
                                                            INT_CTRL
   92 0000005A F04F 5580       LDR              R5, =NVIC_PENDSVSET ; R5 = NVIC
                                                            _PENDSVSET
   93 0000005E 6025            STR              R5, [R4]    ; *R4 = R5
   94 00000060 BC30            POP              {R4, R5}
   95 00000062 4770            BX               LR          ; return;
   96 00000064         
   97 00000064                 align            4
   98 00000064                 end
              E000ED22 
              E000ED04 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\os_cpu
_a.d -o.\os_cpu_a.o -ID:\Installed\MDK5\ARM\RV31\INC -ID:\Installed\MDK5\ARM\PA
CK\ARM\CMSIS\3.20.4\CMSIS\Include -ID:\Installed\MDK5\ARM\PACK\Keil\STM32F1xx_D
FP\1.0.4\Device\Include --list=.\os_cpu_a.lst ..\..\src\arch\os_cpu_a.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      None
Comment: .text unused
OSCtxSw 00000056

Symbol: OSCtxSw
   Definitions
      At line 89 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 8 in file ..\..\src\arch\os_cpu_a.asm
Comment: OSCtxSw used once
OSStart 00000008

Symbol: OSStart
   Definitions
      At line 31 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 6 in file ..\..\src\arch\os_cpu_a.asm
Comment: OSStart used once
OSStartHang 00000024

Symbol: OSStartHang
   Definitions
      At line 55 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 56 in file ..\..\src\arch\os_cpu_a.asm
Comment: OSStartHang used once
OS_ENTER_CRITICAL 00000000

Symbol: OS_ENTER_CRITICAL
   Definitions
      At line 21 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 4 in file ..\..\src\arch\os_cpu_a.asm
Comment: OS_ENTER_CRITICAL used once
OS_EXIT_CRITICAL 00000004

Symbol: OS_EXIT_CRITICAL
   Definitions
      At line 26 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 5 in file ..\..\src\arch\os_cpu_a.asm
Comment: OS_EXIT_CRITICAL used once
PendSV_Handler 00000026

Symbol: PendSV_Handler
   Definitions
      At line 59 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 7 in file ..\..\src\arch\os_cpu_a.asm
Comment: PendSV_Handler used once
PendSV_Handler_NoSave 0000003C

Symbol: PendSV_Handler_NoSave



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 73 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 63 in file ..\..\src\arch\os_cpu_a.asm
Comment: PendSV_Handler_NoSave used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 10 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 46 in file ..\..\src\arch\os_cpu_a.asm
      At line 91 in file ..\..\src\arch\os_cpu_a.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 11 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 47 in file ..\..\src\arch\os_cpu_a.asm
      At line 92 in file ..\..\src\arch\os_cpu_a.asm

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 13 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 37 in file ..\..\src\arch\os_cpu_a.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 12 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 36 in file ..\..\src\arch\os_cpu_a.asm
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OSTCBCur 00000000

Symbol: OSTCBCur
   Definitions
      At line 1 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 69 in file ..\..\src\arch\os_cpu_a.asm
      At line 74 in file ..\..\src\arch\os_cpu_a.asm

OSTCBNext 00000000

Symbol: OSTCBNext
   Definitions
      At line 2 in file ..\..\src\arch\os_cpu_a.asm
   Uses
      At line 75 in file ..\..\src\arch\os_cpu_a.asm
Comment: OSTCBNext used once
2 symbols
346 symbols in table
